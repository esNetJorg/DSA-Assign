version: '3.8'

services:
  car-rental-system:
    build: .
    container_name: car-rental-system
    ports:
      - "8000:8000"   # Frontend
      - "8080:8080"   # REST API
      - "9090:9090"   # gRPC Server
    environment:
      - NODE_ENV=development
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Add a database service for production
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: car-rental-db
  #   environment:
  #     POSTGRES_DB: car_rental
  #     POSTGRES_USER: carrental
  #     POSTGRES_PASSWORD: carrental123
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: car-rental-cache
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

volumes:
  # postgres_data:
  logs:
  backups:

networks:
  default:
    name: car-rental-network
    driver: bridge